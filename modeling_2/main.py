import numpy as np
import matplotlib.pyplot as plt

# Константы
e = 1.6e-19  # Заряд электрона (Кл)
m = 9.11e-31  # Масса электрона (кг)
epsilon_0 = 8.85e-12  # Электрическая постоянная (Ф/м)

# Входные параметры (переведены в СИ)
r_inner = 9 * 1e-2  # Внутренний радиус конденсатора (м)
r_outer = 19 * 1e-2  # Внешний радиус конденсатора (м)
l = 27 * 1e-2       # Длина конденсатора (м)
V_initial = 9.5 * 1e5  # Начальная скорость электрона (м/с)

# Вычисление электрического поля между обкладками
V_applied = np.linspace(1, 1000, 1000)  # Диапазон прикладываемых напряжений (В)
d = r_outer - r_inner
E = V_applied / d  # Электрическое поле (В/м)

# Вычисление траектории для минимального напряжения
x = np.linspace(0, l, 500)  # Продольная ось (м)
y_initial = (r_outer - r_inner) / 2  # Начальное положение по y (середина между обкладками)

# Поиск минимального напряжения, при котором электрон остаётся в конденсаторе
critical_deflection = y_initial  # Отклонение не должно превышать начальное положение y
V_min = None

for V in V_applied:
    a_y = e * (V / d) / m  # Ускорение в направлении y (м/с^2)
    t = l / V_initial  # Время пролёта (с)
    y_deflection = 0.5 * a_y * t**2  # Максимальное отклонение (м)
    if y_deflection >= critical_deflection:
        V_min = V
        break

# Вычисление времени пролёта и конечных компонент скорости
t_flight = l / V_initial
ay = e * (V_min / d) / m  # Ускорение (м/с^2)
Vy_final = ay * t_flight  # Конечная скорость по y (м/с)
V_final = np.sqrt(V_initial**2 + Vy_final**2)  # Модуль конечной скорости

y = y_initial + 0.5 * ay * (x / V_initial)**2

# Построение графиков
plt.figure(figsize=(14, 8))

# Траектория y(x)
plt.subplot(2, 2, 1)
plt.plot(x, y)
plt.title("Траектория электрона y(x)")
plt.xlabel("x (м)")
plt.ylabel("y (м)")
plt.grid()

# Vy(t)
t = np.linspace(0, t_flight, 500)
Vy = ay * t
plt.subplot(2, 2, 2)
plt.plot(t, Vy)
plt.title("Скорость электрона Vy(t)")
plt.xlabel("Время (с)")
plt.ylabel("Vy (м/с)")
plt.grid()

# ay(t)
ay_t = ay * np.ones_like(t)
plt.subplot(2, 2, 3)
plt.plot(t, ay_t)
plt.title("Ускорение электрона ay(t)")
plt.xlabel("Время (с)")
plt.ylabel("ay (м/с^2)")
plt.grid()

# y(t)
y_t = y_initial + 0.5 * ay * t**2
plt.subplot(2, 2, 4)
plt.plot(t, y_t)
plt.title("Положение электрона y(t)")
plt.xlabel("Время (с)")
plt.ylabel("y (м)")
plt.grid()

plt.tight_layout()
plt.show()

# Генерация отчёта
report = f"""
Симуляция движения электрона в цилиндрическом конденсаторе

1. Минимальное напряжение: {V_min:.2f} В
2. Время пролёта: {t_flight:.4e} с
3. Конечная скорость: {V_final:.4e} м/с

Объяснение:
- Электрическое поле между обкладками рассчитывается как E = V / d, где d - расстояние между обкладками.
- Электрон испытывает ускорение вследствие действия поля: a_y = eE / m.
- С использованием кинематики находится отклонение y за время пролёта: y = 0.5 * a_y * t^2.
- Минимальное напряжение определяется, когда отклонение превышает середину между обкладками.
- Конечная скорость и её компоненты рассчитываются на основе времени пролёта и ускорения.

Графики:
- y(x): Траектория электрона в конденсаторе.
- Vy(t): Скорость электрона вдоль оси y во времени.
- ay(t): Постоянное ускорение электрона.
- y(t): Вертикальное положение электрона во времени.
"""
print(report)
